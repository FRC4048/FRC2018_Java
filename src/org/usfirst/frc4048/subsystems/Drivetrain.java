// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4048.subsystems;

import org.usfirst.frc4048.RobotMap;
import org.usfirst.frc4048.commands.*;
import org.usfirst.frc4048.swerve.drive.CanTalonSwerveEnclosure;
import org.usfirst.frc4048.swerve.drive.SwerveDrive;

import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class Drivetrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final WPI_TalonSRX frontLeftDriveMotor = RobotMap.drivetrainfrontLeftDriveMotor;
    private final WPI_TalonSRX frontLeftSteerMotor = RobotMap.drivetrainfrontLeftSteerMotor;
    private final WPI_TalonSRX frontRightDriveMotor = RobotMap.drivetrainfrontRightDriveMotor;
    private final WPI_TalonSRX frontRightSteerMotor = RobotMap.drivetrainfrontRightSteerMotor;
    private final WPI_TalonSRX rearLeftDriveMotor = RobotMap.drivetrainrearLeftDriveMotor;
    private final WPI_TalonSRX rearLeftSteerMotor = RobotMap.drivetrainrearLeftSteerMotor;
    private final WPI_TalonSRX rearRightDriveMotor = RobotMap.drivetrainrearRightDriveMotor;
    private final WPI_TalonSRX rearRightSteerMotor = RobotMap.drivetrainrearRightSteerMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    //Gear ratio of swerve wheels
    private final double GEAR_RATIO = (1988/1.2);
    //Width between drivetrain wheels
    private final double WIDTH = 27.5;
    //Length between drivetrain wheels
    private final double LENGTH = 19;
    
    private SwerveDrive swerveDrivetrain;
    private CanTalonSwerveEnclosure frontLeftWheel;
    private CanTalonSwerveEnclosure frontRightWheel;
    private CanTalonSwerveEnclosure rearLeftWheel;
    private CanTalonSwerveEnclosure rearRightWheel;
    
    /**
     * Constructor for robot drivetrain
     * Initializes all of the wheel enclosures and speed controllers
     */
    public Drivetrain() {
    	super("Drivetrain");
    	
    	
    	
    	frontLeftWheel = new CanTalonSwerveEnclosure("FrontLeftWheel", 
    												frontLeftDriveMotor, frontLeftSteerMotor, GEAR_RATIO);
    	
    	frontRightWheel = new CanTalonSwerveEnclosure("FrontRightWheel", 
													frontRightDriveMotor, frontRightSteerMotor, GEAR_RATIO);
    	
    	rearLeftWheel = new CanTalonSwerveEnclosure("RearLeftWheel", 
													rearLeftDriveMotor, rearLeftSteerMotor, GEAR_RATIO);
    	
    	rearRightWheel = new CanTalonSwerveEnclosure("RearRightWheel", 
													rearRightDriveMotor, rearRightSteerMotor, GEAR_RATIO);
    	
    	swerveDrivetrain = new SwerveDrive(frontRightWheel, frontLeftWheel, rearLeftWheel, rearRightWheel, 
    										WIDTH, LENGTH);
	}
    
    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

